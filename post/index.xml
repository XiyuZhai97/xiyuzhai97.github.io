<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Xiyu Zhai</title>
    <link>https://www.zhaixiyu.com/post/</link>
    <description>Recent content in Posts on Xiyu Zhai</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Aug 2020 22:38:48 -0700</lastBuildDate>
    
	    <atom:link href="https://www.zhaixiyu.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ridiculous USA Government</title>
      <link>https://www.zhaixiyu.com/post/ridiculoususagov/</link>
      <pubDate>Thu, 06 Aug 2020 22:38:48 -0700</pubDate>
      
      <guid>https://www.zhaixiyu.com/post/ridiculoususagov/</guid>
      <description>







  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_0.jpg&#34; &gt;
  &lt;img src=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_0_hub4afa1fda74048075523963664bb5991_318034_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_1.jpg&#34; &gt;
  &lt;img src=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_1_hu5d670c5d587517ec84ec33b7e59bc58a_697020_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_2.png&#34; &gt;
  &lt;img src=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_2_hu790d6b71fdd2569eebc88b439b4f9335_829610_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_3.jpg&#34; &gt;
  &lt;img src=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_3_hu8f6f86ace3071c0192868f1a36ea0384_259120_0x190_resize_q90_lanczos.jpg&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_4.png&#34; &gt;
  &lt;img src=&#34;https://www.zhaixiyu.com/post/ridiculoususagov/gallery/IMG_4_hu120fd60199af59f10a9738375f79263b_323837_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tmux Cheatsheet</title>
      <link>https://www.zhaixiyu.com/post/cheatsheet-tmux/</link>
      <pubDate>Sat, 01 Aug 2020 22:13:49 -0700</pubDate>
      
      <guid>https://www.zhaixiyu.com/post/cheatsheet-tmux/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Ctrl+a&lt;/strong&gt; &lt;strong&gt;Ctrl+a&lt;/strong&gt; : Go to head of the command line&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;w&lt;/strong&gt; : Move cursor forward one word at a time&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b&lt;/strong&gt; : Move cursor backward one word at a time&lt;/p&gt;
&lt;h2 id=&#34;session&#34;&gt;Session&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a :new -s mysession&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a d&lt;/strong&gt; : Detach from session (exit tmux)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a s&lt;/strong&gt; : Show all sessions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a $&lt;/strong&gt; : Rename session&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a :kill-session -t XXX&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a (&lt;/strong&gt; : Move to previous session&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a )&lt;/strong&gt; : Move to next session&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a w&lt;/strong&gt; : Show all sessions and windows&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;window-quick-switch&#34;&gt;Window (quick switch)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a c&lt;/strong&gt; : Create window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a ,&lt;/strong&gt; : Rename current windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a &amp;amp;&lt;/strong&gt; : Close current window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a n&lt;/strong&gt; : Next window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a 0…9&lt;/strong&gt; : Show all sessions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a $&lt;/strong&gt; : Switch/select window by number&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a :swap-window -s 2 -t 1&lt;/strong&gt; Reorder window, swap window number 2(src) and 1(dst)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a :swap-window -t -1&lt;/strong&gt; Move current window to the left by one position&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;panes&#34;&gt;Panes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a %&lt;/strong&gt; : Split pane vertically&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a &amp;ldquo;&lt;/strong&gt; : Split pane horizontally&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a [arrow key]&lt;/strong&gt; : Switch to pane to the direction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a ;&lt;/strong&gt; : Toggle last active pane&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a o&lt;/strong&gt; : Switch to next pane&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a {&lt;/strong&gt; : Move the current pane left&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a }&lt;/strong&gt; : Move the current pane right&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a x&lt;/strong&gt; : Close current pane&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a !&lt;/strong&gt; : Convert pane into a window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a z&lt;/strong&gt; : Toggle pane zoom&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a+[arrow key&lt;/strong&gt;] : Resize current pane size&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a q&lt;/strong&gt; : Show pane numbers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ctrl+a q 0…9&lt;/strong&gt; : Switch/select pane by number&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tmuxconf&#34;&gt;.tmux.conf&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;# Set the default TERM
set -g default-terminal screen

# Update the TERM variable of terminal emulator when creating a new session or attaching a existing session
# (Note: the space is needed so it doesn&#39;t merge with previous variables)&amp;quot;
set-option -ga update-environment &amp;quot; TERM&amp;quot;

# Determine if we should enable 256-colour support
if &amp;quot;[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]&amp;quot; &#39;set -g default-terminal screen-256color&#39;

# Ring the bell if any background window rang a bell
set -g bell-action any

# Update custom sent env vars
# https://babushk.in/posts/renew-environment-tmux.html
# https://stackoverflow.com/a/9833996
set-option -ga update-environment &amp;quot; LC_USER_KEYNAME \
                                    LC_USER_NAME \
                                    LC_USER_EMAIL \
                                    LC_USER \
                                    LC_USER_WORKSPACE&amp;quot;

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39
set -g message-style fg=colour16,bg=colour221,bold
set -g status-left &#39;#[fg=colour235,bg=colour252,bold]#S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami)#[fg=colour238,bg=colour234,nobold]&#39;
set -g window-status-format &amp;quot;#[fg=colour235,bg=colour252,bold] #I #W &amp;quot;
set -g window-status-current-format &amp;quot;#[fg=colour234,bg=colour39]#[fg=colour235,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]&amp;quot;

# Bigger history
set -g history-limit 10000

# Set default shell to $SHELL
set-option -g default-shell $SHELL

# Setting the prefix from C-b to C-a
set -g prefix C-a

# Free the original Ctrl-b prefix keybinding
unbind C-b

#setting the delay between prefix and command
set -sg escape-time 0

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display &amp;quot;Reloaded!&amp;quot;

# splitting panes
bind | split-window -h
bind - split-window -v

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Create new window next to the current one
bind n new-window -a

# mouse support - set to on if you want to use the mouse
set-option -g mouse on

# Set the default terminal mode to 256color mode
set -g default-terminal &amp;quot;screen-256color&amp;quot;

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Center the window list
set -g status-justify centre

# enable vi keys.
setw -g mode-keys vi

# Vim clipboard bindings
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection

# Tmux clear history
bind C-k send-keys -R \; clear-history \; send-keys C-l
bind C-l send-keys &#39;C-l&#39;

bind-key Y command-prompt -p &#39;save history to filename:&#39; -I &#39;~/tmux.history&#39; &#39;capture-pane -S - ; save-buffer %1 ; delete-buffer&#39;

bind -n S-Left previous-window
bind -n S-Right next-window

set -g @plugin &#39;tmux-plugins/tpm&#39;
set -g @plugin &#39;tmux-plugins/tmux-resurrect&#39;
set -g @plugin &#39;christoomey/vim-tmux-navigator&#39;

set-environment -g TMUX_PLUGIN_MANAGER_PATH &#39;~/.tmux/plugins/&#39;
run -b &#39;~/.tmux/plugins/tpm/tpm&#39;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Application of Parallel Computing in Traffic Flow Control</title>
      <link>https://www.zhaixiyu.com/post/parallelcomputpre/</link>
      <pubDate>Fri, 31 Jan 2020 23:04:17 -0800</pubDate>
      
      <guid>https://www.zhaixiyu.com/post/parallelcomputpre/</guid>
      <description>&lt;h2 id=&#34;application-traffic-flow-simulation-and-prediction&#34;&gt;Application: Traffic flow simulation and prediction&lt;/h2&gt;
&lt;h3 id=&#34;the-problem-to-solve&#34;&gt;The problem to solve&lt;/h3&gt;
&lt;p&gt;As autonomous vehicles become more popular and more sensors are deployed on the road, it is now possible to build a better transportation simulation system containing historic data for traffic flow prediction. And a city-scale transportation network simulation will require a combination of statistical skills and computing techniques that can take advantage of abundant hardware.
\&lt;/p&gt;
&lt;p&gt;The major way to predict the traffic flow situation is machine learning. However, complex neural networks model often takes a long time to train. Therefore it will be extremely useful to scale the training process, leading to drastically decrease in training time and increase in accuracy\cite{zhao2019parallel}.
\&lt;/p&gt;
&lt;p&gt;Backpropagation neural network (BPNN) is one of the most widely used model due to its excellent function approximation ability. A typical BPNN usually contains three kinds of layers including input layer, hidden layer, and output layer. Input layer is the entrance of the algorithm. It inputs one instance of the data into the network. The dimension of the instance determines the number of inputs in the input layer. Hidden layer contains one or several layers. It outputs intermediate data to the output layer that generates the final output of the neural network. The number of outputs is determined by the encoding of the classified results. In BPNN each layer consists of a number of neurons. The linear functions or nonlinear functions in each neuron are frequently controlled by two kinds of parameters, weight and bias. \&lt;/p&gt;
&lt;p&gt;In the training phase, BPNN employs feed forward to generate output. And then it calculates the error between the output and the target output. Afterwards, BPNN employs backpropagation to tune weights and biases in neurons based on the calculated error. In the classifying phase, BPNN only executes feed forward to achieve the ultimate classified result. Although it is difficult to determine an optimal number of the hidden layers and neurons for one classification task, it is proved that a three-layer BPNN is enough to fit the mathematical equations which approximate the mapping relationships between the inputs and the outputs. While due to a large number of mathematical calculations existing in the algorithm, low efficiency of BPNN leads to performance deterioration in both training phase and classification phase when the data size is large.
\&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;Build a efficient parallel computing framework for traffic flow simulation on large-scale networks. For large scale city, we can divide the transportation into several modules based on its location and function. The simulation of all targets(cars, pedestrians, buses, bicycles) inside one module will be processed individually. And &amp;ldquo;various types of simulation events are mapped to independent logical processes that can concurrently execute their procedures while maintaining good load balance&amp;rdquo;\cite{qu2017large}. The connection between each module will be managed by time sequence and location information.
\&lt;/p&gt;
&lt;p&gt;Build a efficient parallel computing method to accelerate training the deep neural network that predicts the future traffic flow for real-time control. We may build a multi-process training framework for Pytorch or Tensorflow Neural Networks.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
